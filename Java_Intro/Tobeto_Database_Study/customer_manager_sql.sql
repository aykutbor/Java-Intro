-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customers
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer_number character varying(10)[] NOT NULL,
    canal_id integer NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT "UK_CUSTOMERS_CUSTOMER_NUMBER" UNIQUE (customer_number)
        INCLUDE(customer_number)
);

CREATE TABLE IF NOT EXISTS public.natural_customers
(
    customer_id integer NOT NULL,
    first_name character varying(50)[] NOT NULL,
    last_name character varying(50)[] NOT NULL,
    nationality_number character varying(11)[] NOT NULL,
    PRIMARY KEY (customer_id),
    CONSTRAINT "UK_NATURAL_CUSTOMERS_NATIONALITY_NUMBER" UNIQUE (nationality_number)
        INCLUDE(nationality_number)
);

CREATE TABLE IF NOT EXISTS public.legal_customers
(
    customer_id integer NOT NULL,
    title character varying(50)[] NOT NULL,
    tax_number character varying(10)[] NOT NULL,
    PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.addresses
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer_id integer NOT NULL,
    address_detail character varying(250)[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.balance_sheets
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer_id integer NOT NULL,
    date date NOT NULL,
    amount money NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.commercial_activities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    natural_customer_id integer NOT NULL,
    start_date date NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT "FK_COMMERCIAL_ACTIVITIES_NATURAL_CUSTOMER_ID" UNIQUE (natural_customer_id)
        INCLUDE(natural_customer_id)
);

CREATE TABLE IF NOT EXISTS public.canals
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name character varying(50)[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.trade_unions
(
    customer_id integer NOT NULL,
    name character varying(50)[] NOT NULL,
    PRIMARY KEY (customer_id)
);

ALTER TABLE IF EXISTS public.customers
    ADD CONSTRAINT "FK_CUSTOMERS_CANALS" FOREIGN KEY (canal_id)
    REFERENCES public.canals (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.natural_customers
    ADD CONSTRAINT "FK_NATURAL_CUSTOMER_CUSTOMERS" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.legal_customers
    ADD CONSTRAINT "FK_LEGAL_CUSTOMERS_CUSTOMERS" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "FK_ADDRESSES_CUSTOMERS" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.balance_sheets
    ADD CONSTRAINT "FK_BALANCE_SHEETS_CUSTOMERS" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.commercial_activities
    ADD CONSTRAINT "FK_COMMERCÄ°AL_ACTIVITIES_NATURAL_CUSTOMERS" FOREIGN KEY (natural_customer_id)
    REFERENCES public.natural_customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.trade_unions
    ADD CONSTRAINT "FK_TRADE_UNIONS_CUSTOMERS" FOREIGN KEY (customer_id)
    REFERENCES public.customers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;